image: atlassian/default-image:2


options:
  docker: true
  size: 2x
pipelines:

  custom:
    cypress:
#      - step:
#          name: "Build and Push Docker Image"
#          script:
#            - docker info
#            - docker build -t jan961/cypress-segue:myimage .
#            - docker login -u jan961 -p $DOCKER_PASSWORD
#            - docker  push jan961/cypress-segue:myimage

      - step:
          size: 4x
          name: "Run Cypress Tests"
          image:            # get the docker image from DockerHub
            name: jan961/cypress-segue:myimage
            username: $DOCKER_PASSWORD
            password: $DOCKER_USERNAME
            email: $DOCKER_EMAIL

          caches:
            - node
            - cypress
            - nextcache
          timeout:
          script:
            - echo "Current directory is $(pwd)"
            - ls
            # Downgrade npm
            - npm install -g npm@9.6.7
             # Get the start-server-and-test utility that will keep the server running while tests are run
            - npm install -g start-server-and-test
            - apt-get update && apt-get install -y zip
            - mkdir segue-dir
            # enable extended pattern matching in bash
            - shopt -s extglob
            # include hidden files such as .git (which here is apparently needed for husky)
            - shopt -s dotglob
            # Copy the contents of the current directory (all of Segue) to the segue-dir directory
            - mv !(segue-dir) segue-dir/
            - cd segue-dir &&  npm install
            - echo $TEST_APP_ENV | base64 --decode --ignore-garbage > .env
            - cat .env
            - npm run build
            - cd ..
            # Clone the Cypress repository into a dir at the same level as Segue
            - git clone git@bitbucket.org:segue-team/cypress.git && cd cypress
            - git checkout staging
            - npm install
            - npx cypress install
            - cd ..
            - set +e # Disable exit on error - cypress breaks if any of the tests fail
            - DEBUG=start-server-and-test start-server-and-test "npm --prefix segue-dir/ run start" http://localhost:3000 "npm --prefix cypress/ run cy:alltests"
            - EXIT_CODE=$?
            - echo "Cypress exited with code $EXIT_CODE"
            - if [ $EXIT_CODE -ne 0 ]; then
                ALERT_TYPE="fail"; else
                ALERT_TYPE="success"; 
              fi
            - set -e # Re-enable exit on error for the rest of the script
            - cd cypress
            - echo "Merging reports"
            # Merge reports from different spec files
            - npx mochawesome-merge cypress/results/*.json -o output.json
            # Generate HTML report from merged JSON
            - npx marge output.json
            # Generate email report template HTML file that will form the body of the email
            - node create-email-report
            # Zip the full report directory - this is commanded out for now - I can add upload to the repo later if needed
            #zip -r full-report.zip mochawesome-report/

            # Use pre-built Atlassian email-notify pipe with the variables as below to send email with test results
            - pipe: atlassian/email-notify:0.13.2
              variables:
                USERNAME: $SMTP_USERNAME
                PASSWORD: $SMTP_PASSWORD
                FROM: $SMTP_USERNAME
                TO: jan@segue360.co.uk
                HOST: 'smtp.gmail.com'
                SUBJECT: '${ALERT_TYPE}: Segue Integration Tests for ${BITBUCKET_BRANCH}'
                BODY_HTML: 'email-report.html'
                DEBUG: 'true'
          artifacts:
            - cypress/mochawesome-report
            - cypress/full-report.zip
            - cypress/email-report.html
            - cypress/cypress/results/**
            - cypress/cypress/screenshots/**


  default:
    - step:
        name: Build and Test
        image: node:18.20.4
        variables:
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: $NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY
          CLERK_SECRET_KEY: $CLERK_SECRET_KEY
          WEB_APP_URI: $CYPRESS_BASE_URL
        caches:
          - node
        script:
          - npm install
          - npm run test:ci
          - npm run build
    - step:
        name: SonarQube Analysis
        image: node:18.20.4
        script:
          - pipe: sonarsource/sonarcloud-scan:2.0.0
          - pipe: sonarsource/sonarcloud-quality-gate:0.1.6
definitions:
  caches:
    npm: ~/.npm
    cypress: ~/.cache
    nextcache: ~/.next/cache
  services:
    docker:
      memory: 4096






