image: atlassian/default-image:2
image: cypress/browsers:latest
options:
  docker: true
  size: 2x
pipelines:
  custom:
    cypress:
      - variables:
          - name: browser_name
            default: "chrome"
            allowed-values:
              - "chrome"
              - "firefox"
              - "electron"
      - step:
          name: "Run Cypress Tests"
          image: cypress/included:latest
          caches:
            - node
            - cypress
          script:
            - echo $TEST_APP_ENV | base64 --decode --ignore-garbage > .env
            - cat .env
            - npm ci
            - npm run build
            - cat .env
            - npm run start &
            - npx wait-on http://localhost:3000
            # Clone Cypress repo in a separate directory
            - mkdir cypress-tests && cd cypress-tests
            - git clone git@bitbucket.org:segue-team/cypress.git
            - cd cypress
            - npm ci
            # Run Cypress tests in headless mode
            - npm run cy:alltests --browser chrome || true
            # - npm run cy:permissions --browser chrome
            - npx mochawesome-merge cypress/reports/mocha/*.json -o output.json
          after-script:
            - cd cypress-tests/cypress
            # Create a custom HTML report from output.json
            - npm run merge:reports
            - npm run generate:report
            # Set alert type based on test results
            - ALERT_TYPE="success"
            - |
              if [[ $(jq '.stats.failures' output.json) -ne 0 ]]; then 
                ALERT_TYPE="error"
                echo "Tests failed but continuing with report generation"
              fi
            - ALERT_TYPE="success"
            - if [[ $BITBUCKET_EXIT_CODE -ne 0 ]]; then 
                ALERT_TYPE="error";
                echo "Tests failed but continuing with report generation";
              fi
            - pipe: atlassian/email-notify:0.13.2
              variables:
                USERNAME: $SMTP_USERNAME
                PASSWORD: $SMTP_PASSWORD
                FROM: $SMTP_USERNAME
                TO: $TESTERS_GROUP_EMAIL
                HOST: 'smtp.gmail.com'
                SUBJECT: '${ALERT_TYPE}:Bitbucket Pipe Notification for ${BITBUCKET_BRANCH}'
                BODY_HTML: 'cypress/reports/mocha/test-report.html'
          artifacts:
            - cypress-tests/cypress/reports/**
            - cypress-tests/cypress/cypress/reports/mocha/test-report.html
  default:
      - step:
          name: Build and Test
          image: node:18.20.4
          variables:
            NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: $NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY
            CLERK_SECRET_KEY: $CLERK_SECRET_KEY
            WEB_APP_URI: $CYPRESS_BASE_URL
          caches:
            - node
          script:
            - npm install
            - npm run test:ci
            - npm run build
      - step:
          name: SonarQube Analysis
          image: node:18.20.4
          script:
            - pipe: sonarsource/sonarcloud-scan:2.0.0
            - pipe: sonarsource/sonarcloud-quality-gate:0.1.6
definitions:
  caches:
    npm: ~/.npm
    cypress: ~/.cache
    nextcache: ~/.next/cache
  services:
    docker:
      memory: 4096