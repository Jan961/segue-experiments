image: atlassian/default-image:2
image: cypress/browsers:latest
options:
  docker: true
  size: 2x
pipelines:
  custom:
    cypress:
      - variables:
          - name: browser_name
            default: "chrome"
            allowed-values:
              - "chrome"
              - "firefox"
              - "electron"
      - step:
          name: "Run Cypress Tests"
          image: cypress/included:latest
          caches:
            - node
            - cypress
          script:
            - echo $TEST_APP_ENV | base64 --decode --ignore-garbage > .env
            - cat .env
            - npm ci
            - npm run build
            - cat .env
            - npm run start &
            - npx wait-on http://localhost:3000
            # Clone Cypress repo in a separate directory
            - mkdir cypress-tests && cd cypress-tests
            - git clone git@bitbucket.org:segue-team/cypress.git
            - cd cypress
            - npm ci
            # Run Cypress tests in headless mode
            - npm run cy:alltests --browser chrome || true
            # - npm run cy:permissions --browser chrome
            - apt-get update && apt-get install -y zip jq tree
            - zip -r reports.zip cypress/reports/
            - npx mochawesome-merge cypress/reports/mocha/*.json -o output.json
            - npx marge output.json
            - ls -al
          after-script:
            - tree -I "node_modules"
            - cd cypress-tests/cypress
            - apt-get update && apt-get install -y jq
            # Create email content using existing cucumber-report.html
            - |
              echo "
              <!DOCTYPE html>
              <html>
              <head>
                <style>
                  body { font-family: Arial, sans-serif; }
                  .summary { margin: 20px 0; padding: 20px; background: #f5f5f5; }
                  .success { color: green; font-weight: bold; }
                  .failure { color: red; font-weight: bold; }
                </style>
              </head>
              <body>
                <div class='summary'>
                  <h2>Cypress Test Report - ${BITBUCKET_BRANCH}</h2>
                  <p>Build Status: $(if [[ $BITBUCKET_EXIT_CODE -eq 0 ]]; then echo '<span class=\"success\">Success</span>'; else echo '<span class=\"failure\">Failed</span>'; fi)</p>
                  <p>Repository: ${BITBUCKET_REPO_FULL_NAME}</p>
                  <p>Branch: ${BITBUCKET_BRANCH}</p>
                  <p>Commit: ${BITBUCKET_COMMIT}</p>
                  <p>Run Date: $(date)</p>
                </div>
                $(cat cucumber-report.html)
              </body>
              </html>
              " > email_report.html
            - ALERT_TYPE="success"
            - if [[ $BITBUCKET_EXIT_CODE -ne 0 ]]; then 
                ALERT_TYPE="error";
                echo "Tests failed but continuing with report generation";
              fi
            - echo "$SMTP_USERNAME"
            - echo "$SMTP_PASSWORD"
            - pipe: atlassian/email-notify:0.13.2
              variables:
                USERNAME: $SMTP_USERNAME
                PASSWORD: $SMTP_PASSWORD
                FROM: 'asara97911@gmail.com'
                TO: 'asara97911@gmail.com'
                HOST: 'smtp.gmail.com'
                SUBJECT: '${ALERT_TYPE}:Bitbucket Pipe Notification for ${BITBUCKET_BRANCH}'
                ATTACHMENTS: 'cypress-tests/cypress/reports.zip'
          artifacts:
            - cypress-tests/cypress/reports/**
            - cypress-tests/cypress/reports.zip
  default:
      - step:
          name: Build and Test
          image: node:18.20.4
          variables:
            NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: $NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY
            CLERK_SECRET_KEY: $CLERK_SECRET_KEY
            WEB_APP_URI: $CYPRESS_BASE_URL
          caches:
            - node
          script:
            - npm ci
            - npm run test:ci
            - npm run build
            - pipe: sonarsource/sonarcloud-scan:2.0.0
            - pipe: sonarsource/sonarcloud-quality-gate:0.1.6
  branches:
      main:
        - step:
            name: SonarQube Analysis
            image: node:18.20.4
            script:
              - pipe: sonarsource/sonarcloud-scan:2.0.0
              - pipe: sonarsource/sonarcloud-quality-gate:0.1.6
definitions:
  caches:
    npm: ~/.npm
    cypress: ~/.cache
    nextcache: ~/.next/cache
  services:
    docker:
      memory: 4096